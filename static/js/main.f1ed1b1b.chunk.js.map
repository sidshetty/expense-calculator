{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseFilter","value","selectedYear","onChange","event","onSelectedFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","useState","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","valueArray","dataPoints","datapoint","max","dataPoint","ExpenseChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","INITIAL_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1ed1b1b.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nconst Card = (props) => {\r\n\tconst classes = 'card ' + props.className;\r\n\treturn <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import './ExpenseFilter.css';\r\n\r\nconst ExpenseFilter = (props) => {\r\n\tconst selectedValueHandler = (event) => {\r\n\t\tprops.onSelectedFilter(event.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"expenses-filter\">\r\n\t\t\t<div className=\"expenses-filter__control\">\r\n\t\t\t\t<label>Filter By Year</label>\r\n\t\t\t\t<select value={props.selectedYear} onChange={selectedValueHandler}>\r\n\t\t\t\t\t<option value=\"2022\">2022</option>\r\n\t\t\t\t\t<option value=\"2021\">2021</option>\r\n\t\t\t\t\t<option value=\"2020\">2020</option>\r\n\t\t\t\t\t<option value=\"2019\">2019</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ExpenseFilter;\r\n","import './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n\tconst month = props.date.toLocaleString('en-US', { month: 'long' });\r\n\tconst day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n\tconst year = props.date.getFullYear();\r\n\r\n\treturn (\r\n\t\t<div className=\"expense-date\">\r\n\t\t\t<div className=\"expense-date__month\">{month}</div>\r\n\t\t\t<div className=\"expense-date__year\">{year}</div>\r\n\t\t\t<div className=\"expense-date__day\">{day}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import React, { useState } from 'react';\r\nimport './ExpenseItem.css';\r\nimport Card from '../UI/Card';\r\nimport ExpenseDate from './ExpenseDate';\r\n\r\nconst ExpenseItem = (props) => {\r\n\tconst [ title, setTitle ] = useState(props.title);\r\n\r\n\tconst clickHandler = () => {\r\n\t\tsetTitle('Updated!');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<li>\r\n\t\t\t<Card className=\"expense-item\">\r\n\t\t\t\t<ExpenseDate date={props.date} />\r\n\t\t\t\t<div className=\"expense-item__description\">\r\n\t\t\t\t\t<h2>{props.title}</h2>\r\n\t\t\t\t\t<div className=\"expense-item__price\">â‚¹{props.amount}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* <button onClick={clickHandler}>Change Title</button> */}\r\n\t\t\t</Card>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import './ExpensesList.css';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nconst ExpensesList = (props) => {\r\n\tif (props.items.length === 0) {\r\n\t\treturn <h2 className=\"expenses-list__fallback\">Found No Expenses</h2>;\r\n\t}\r\n\treturn (\r\n\t\t<ul className=\"expenses-list\">\r\n\t\t\t{props.items.map((expense) => (\r\n\t\t\t\t<ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date} />\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default ExpensesList;\r\n","import './ChartBar.css';\r\nconst ChartBar = (props) => {\r\n\tlet barFillHeight = '0%';\r\n\tif (props.maxValue > 0) {\r\n\t\tbarFillHeight = Math.round(props.value / props.maxValue * 100) + '%';\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"chart-bar\">\r\n\t\t\t<div className=\"chart-bar__inner\">\r\n\t\t\t\t<div className=\"chart-bar__fill\" style={{ height: barFillHeight }} />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"chart-bar__label\">{props.label}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChartBar;\r\n","import ChartBar from './ChartBar';\r\nimport './Chart.css';\r\nconst Chart = (props) => {\r\n\t{\r\n\t\t/* taking props in chart so that this component can be reused and it'll output any kind of data recieved as chart instead of statically just adding months */\r\n\t}\r\n\tconst valueArray = props.dataPoints.map((datapoint) => datapoint.value);\r\n\t//return datapoint.value for each datapoint in new array\r\n\tconst maxValue = Math.max(...valueArray);\r\n\r\n\treturn (\r\n\t\t<div className=\"chart\">\r\n\t\t\t{props.dataPoints.map((dataPoint) => (\r\n\t\t\t\t<ChartBar key={dataPoint.label} value={dataPoint.value} maxValue={maxValue} label={dataPoint.label} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from '../Chart/Chart';\r\n\r\nconst ExpenseChart = (props) => {\r\n\tconst chartDataPoints = [\r\n\t\t{ label: 'Jan', value: 0 },\r\n\t\t{ label: 'Feb', value: 0 },\r\n\t\t{ label: 'Mar', value: 0 },\r\n\t\t{ label: 'Apr', value: 0 },\r\n\t\t{ label: 'May', value: 0 },\r\n\t\t{ label: 'Jun', value: 0 },\r\n\t\t{ label: 'Jul', value: 0 },\r\n\t\t{ label: 'Aug', value: 0 },\r\n\t\t{ label: 'Sep', value: 0 },\r\n\t\t{ label: 'Oct', value: 0 },\r\n\t\t{ label: 'Nov', value: 0 },\r\n\t\t{ label: 'Dec', value: 0 }\r\n\t];\r\n\r\n\tfor (const expense of props.expenses) {\r\n\t\tconst expenseMonth = expense.date.getMonth(); //starts at 0 , so Jan = 0\r\n\t\tchartDataPoints[expenseMonth].value += expense.amount;\r\n\t}\r\n\r\n\treturn <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpenseChart;\r\n","import './Expenses.css';\r\nimport Card from '../UI/Card';\r\nimport ExpenseFilter from './ExpenseFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport { useState } from 'react';\r\nimport ExpenseChart from './ExpensesChart';\r\n\r\nconst Expenses = (props) => {\r\n\tconst [ filteredYear, setFilteredYear ] = useState('2021');\r\n\r\n\tconst filterSelectedHandler = (filteredYear) => {\r\n\t\tsetFilteredYear(filteredYear);\r\n\t};\r\n\r\n\tconst filteredExpenses = props.items.filter((expense) => {\r\n\t\treturn expense.date.getFullYear().toString() === filteredYear;\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Card className=\"expenses\">\r\n\t\t\t\t<ExpenseFilter onSelectedFilter={filterSelectedHandler} selectedYear={filteredYear} />\r\n\t\t\t\t<ExpenseChart expenses={filteredExpenses} />\r\n\t\t\t\t<ExpensesList items={filteredExpenses} />\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Expenses;\r\n","import { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n\tconst [ enteredTitle, setEnteredTitle ] = useState('');\r\n\tconst [ enteredAmount, setEnteredAmount ] = useState('');\r\n\tconst [ enteredDate, setEnteredDate ] = useState('');\r\n\t// const [ userInput, setUserInput ] = useState({\r\n\t// \tenteredTitle: '',\r\n\t// \tenteredAmount: '',\r\n\t// \tenteredDate: ''\r\n\t// });\r\n\r\n\tconst titleChangeHandler = (event) => {\r\n\t\tsetEnteredTitle(event.target.value);\r\n\t\t// setUserInput({\r\n\t\t// \t...userInput,\r\n\t\t// \tenteredTitle: event.target.value\r\n\t\t// });\r\n\t\t// setUserInput((prevState) => {\r\n\t\t// \treturn { ...prevState, enteredTitle: event.title.value };\r\n\t\t// });\r\n\t};\r\n\r\n\tconst amountChangeHandler = (event) => {\r\n\t\tsetEnteredAmount(event.target.value);\r\n\t\t// setUserInput({\r\n\t\t// \t...userInput,\r\n\t\t// \tenteredAmount: event.target.value\r\n\t\t// });\r\n\t};\r\n\r\n\tconst dateChangeHandler = (event) => {\r\n\t\tsetEnteredDate(event.target.value);\r\n\t\t// setUserInput({\r\n\t\t// \t...userInput,\r\n\t\t// \tenteredDate: event.target.value\r\n\t\t// });\r\n\t};\r\n\r\n\tconst submitHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst expenseData = {\r\n\t\t\ttitle: enteredTitle,\r\n\t\t\tamount: +enteredAmount, //added + sign because otherwise it'll add the amount as string i.e 1+1=11 instead of number\r\n\t\t\tdate: new Date(enteredDate)\r\n\t\t};\r\n\t\tprops.onSaveExpenseData(expenseData);\r\n\t\tsetEnteredTitle('');\r\n\t\tsetEnteredAmount('');\r\n\t\tsetEnteredDate('');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={submitHandler}>\r\n\t\t\t<div className=\"new-expense__controls\">\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<label>Title</label>\r\n\t\t\t\t\t<input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<label>Amount</label>\r\n\t\t\t\t\t<input value={enteredAmount} type=\"number\" min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<label>Title</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tvalue={enteredDate}\r\n\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\tmin=\"2019-01-01\"\r\n\t\t\t\t\t\tmax=\"2022-12-31\"\r\n\t\t\t\t\t\tonChange={dateChangeHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"new-expense__actions\">\r\n\t\t\t\t<button type=\"button\" onClick={props.onCancel}>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</button>\r\n\t\t\t\t<button type=\"submit\">Add Expense</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React from 'react';\r\nimport './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport { useState } from 'react';\r\n\r\nconst NewExpense = (props) => {\r\n\tconst saveExpenseDataHandler = (enteredExpenseData) => {\r\n\t\tconst expenseData = {\r\n\t\t\t...enteredExpenseData,\r\n\t\t\tid: Math.random().toString()\r\n\t\t};\r\n\t\t//console.log(expenseData);\r\n\t\tprops.onAddExpense(expenseData);\r\n\t};\r\n\r\n\tconst [ isEditing, setIsEditing ] = useState(false);\r\n\r\n\tconst startEditingHandler = () => {\r\n\t\tsetIsEditing(true);\r\n\t};\r\n\r\n\tconst stopEditingHandler = () => {\r\n\t\tsetIsEditing(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"new-expense\">\r\n\t\t\t{!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n\t\t\t{isEditing && <ExpenseForm onCancel={stopEditingHandler} onSaveExpenseData={saveExpenseDataHandler} />}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from 'react';\r\nimport Expenses from './components/Expenses/Expenses';\r\nimport NewExpense from './components/NewExpense/NewExpense';\r\nconst INITIAL_EXPENSES = [\r\n\t{\r\n\t\tid: 'e1',\r\n\t\ttitle: 'Toilet Paper',\r\n\t\tamount: 94.12,\r\n\t\tdate: new Date(2020, 7, 14)\r\n\t},\r\n\t{ id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\r\n\t{\r\n\t\tid: 'e3',\r\n\t\ttitle: 'Car Insurance',\r\n\t\tamount: 294.67,\r\n\t\tdate: new Date(2021, 2, 28)\r\n\t},\r\n\t{\r\n\t\tid: 'e4',\r\n\t\ttitle: 'New Desk (Wooden)',\r\n\t\tamount: 450,\r\n\t\tdate: new Date(2021, 5, 12)\r\n\t}\r\n];\r\n\r\nconst App = () => {\r\n\tconst [ expenses, setExpenses ] = useState(INITIAL_EXPENSES);\r\n\r\n\tconst addExpenseHandler = (expense) => {\r\n\t\tsetExpenses((prevExpenses) => {\r\n\t\t\treturn [ expense, ...prevExpenses ];\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<NewExpense onAddExpense={addExpenseHandler} />\r\n\t\t\t<Expenses items={expenses} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}